/**
* The Blue Alliance API v3
* # Overview    Information and statistics about FIRST Robotics Competition teams and events.   # Authentication   All endpoints require an Auth Key to be passed in the header `X-TBA-Auth-Key`. If you do not have an auth key yet, you can obtain one from your [Account Page](/account).    A `User-Agent` header may need to be set to prevent a 403 Unauthorized error.
*
* The version of the OpenAPI document: 3.5.1
* 
*
* NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
* https://openapi-generator.tech
* Do not edit the class manually.
*/
package com.npmanos.tbalib.model

/**
 * 
 * @param key TBA event key with the format yyyy[EVENT_CODE], where yyyy is the year, and EVENT_CODE is the event code of the event.
 * @param name Official name of event on record either provided by FIRST or organizers of offseason event.
 * @param eventCode Event short code, as provided by FIRST.
 * @param eventType Event Type, as defined here: https://github.com/the-blue-alliance/the-blue-alliance/blob/master/consts/event_type.py#L2
 * @param startDate Event start date in `yyyy-mm-dd` format.
 * @param endDate Event end date in `yyyy-mm-dd` format.
 * @param year Year the event data is for.
 * @param eventTypeString Event Type, eg Regional, District, or Offseason.
 * @param district 
 * @param city City, town, village, etc. the event is located in.
 * @param stateProv State or Province the event is located in.
 * @param country Country the event is located in.
 * @param shortName Same as `name` but doesn't include event specifiers, such as 'Regional' or 'District'. May be null.
 * @param week Week of the event relative to the first official season event, zero-indexed. Only valid for Regionals, Districts, and District Championships. Null otherwise. (Eg. A season with a week 0 'preseason' event does not count, and week 1 events will show 0 here. Seasons with a week 0.5 regional event will show week 0 for those event(s) and week 1 for week 1 events and so on.)
 * @param address Address of the event's venue, if available.
 * @param postalCode Postal code from the event address.
 * @param gmapsPlaceId Google Maps Place ID for the event address.
 * @param gmapsUrl Link to address location on Google Maps.
 * @param lat Latitude for the event address.
 * @param lng Longitude for the event address.
 * @param locationName Name of the location at the address for the event, eg. Blue Alliance High School.
 * @param timezone Timezone name.
 * @param website The event's website, if any.
 * @param firstEventId The FIRST internal Event ID, used to link to the event on the FRC webpage.
 * @param firstEventCode Public facing event code used by FIRST (on frc-events.firstinspires.org, for example)
 * @param webcasts 
 * @param divisionKeys An array of event keys for the divisions at this event.
 * @param parentEventKey The TBA Event key that represents the event's parent. Used to link back to the event from a division event. It is also the inverse relation of `divison_keys`.
 * @param playoffType Playoff Type, as defined here: https://github.com/the-blue-alliance/the-blue-alliance/blob/master/consts/playoff_type.py#L4, or null.
 * @param playoffTypeString String representation of the `playoff_type`, or null.
 */

data class Event (
    /* TBA event key with the format yyyy[EVENT_CODE], where yyyy is the year, and EVENT_CODE is the event code of the event. */
    val key: kotlin.String,
    /* Official name of event on record either provided by FIRST or organizers of offseason event. */
    val name: kotlin.String,
    /* Event short code, as provided by FIRST. */
    val eventCode: kotlin.String,
    /* Event Type, as defined here: https://github.com/the-blue-alliance/the-blue-alliance/blob/master/consts/event_type.py#L2 */
    val eventType: kotlin.Int,
    /* Event start date in `yyyy-mm-dd` format. */
    val startDate: org.threeten.bp.LocalDate,
    /* Event end date in `yyyy-mm-dd` format. */
    val endDate: org.threeten.bp.LocalDate,
    /* Year the event data is for. */
    val year: kotlin.Int,
    /* Event Type, eg Regional, District, or Offseason. */
    val eventTypeString: kotlin.String,
    val district: DistrictList? = null,
    /* City, town, village, etc. the event is located in. */
    val city: kotlin.String? = null,
    /* State or Province the event is located in. */
    val stateProv: kotlin.String? = null,
    /* Country the event is located in. */
    val country: kotlin.String? = null,
    /* Same as `name` but doesn't include event specifiers, such as 'Regional' or 'District'. May be null. */
    val shortName: kotlin.String? = null,
    /* Week of the event relative to the first official season event, zero-indexed. Only valid for Regionals, Districts, and District Championships. Null otherwise. (Eg. A season with a week 0 'preseason' event does not count, and week 1 events will show 0 here. Seasons with a week 0.5 regional event will show week 0 for those event(s) and week 1 for week 1 events and so on.) */
    val week: kotlin.Int? = null,
    /* Address of the event's venue, if available. */
    val address: kotlin.String? = null,
    /* Postal code from the event address. */
    val postalCode: kotlin.String? = null,
    /* Google Maps Place ID for the event address. */
    val gmapsPlaceId: kotlin.String? = null,
    /* Link to address location on Google Maps. */
    val gmapsUrl: kotlin.String? = null,
    /* Latitude for the event address. */
    val lat: kotlin.Double? = null,
    /* Longitude for the event address. */
    val lng: kotlin.Double? = null,
    /* Name of the location at the address for the event, eg. Blue Alliance High School. */
    val locationName: kotlin.String? = null,
    /* Timezone name. */
    val timezone: kotlin.String? = null,
    /* The event's website, if any. */
    val website: kotlin.String? = null,
    /* The FIRST internal Event ID, used to link to the event on the FRC webpage. */
    val firstEventId: kotlin.String? = null,
    /* Public facing event code used by FIRST (on frc-events.firstinspires.org, for example) */
    val firstEventCode: kotlin.String? = null,
    val webcasts: kotlin.collections.List<Webcast>? = null,
    /* An array of event keys for the divisions at this event. */
    val divisionKeys: kotlin.collections.List<kotlin.String>? = null,
    /* The TBA Event key that represents the event's parent. Used to link back to the event from a division event. It is also the inverse relation of `divison_keys`. */
    val parentEventKey: kotlin.String? = null,
    /* Playoff Type, as defined here: https://github.com/the-blue-alliance/the-blue-alliance/blob/master/consts/playoff_type.py#L4, or null. */
    val playoffType: kotlin.Int? = null,
    /* String representation of the `playoff_type`, or null. */
    val playoffTypeString: kotlin.String? = null
) 



